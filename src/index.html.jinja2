<html>
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" crossorigin="anonymous"/>
  <link rel="stylesheet" href="../style.css"/>
  <title>{{ title }} Browser</title>
  <style>
    #annotations {
      padding-left: 1em;
      list-style-type: none !important;
    }
    #annotations ul {
      padding-left: 3em;
      list-style-type: circle !important;
    }
    #annotations ul ul {
      padding-left: 2em;
      list-style-type: none !important;
    }
    .hierarchy {
      padding-left: 0em;
      list-style-type: none !important;
    }
    .hierarchy ul {
      padding-left: 1em;
      list-style-type: none !important;
    }
    .hierarchy ul.multiple-children > li > ul {
      border-left: 1px dotted #ddd;
    }
    .hierarchy .children {
      border-left: none;
      margin-left: 2em;
      text-indent: -1em;
    }
    .hierarchy .children li::before {
      content: "Â‚2";
      color: #ddd;
      display: inline-block;
      width: 0em;
      margin-left: -1em;
    }
    #nonpeptides .tt-dataset {
      max-height: 300px;
      overflow-y: scroll;
    }
    span.twitter-typeahead .tt-menu {
      cursor: pointer;
    }
    .dropdown-menu, span.twitter-typeahead .tt-menu {
      position: absolute;
      top: 100%;
      left: 0;
      z-index: 1000;
      display: none;
      float: left;
      min-width: 160px;
      padding: 5px 0;
      margin: 2px 0 0;
      font-size: 1rem;
      color: #373a3c;
      text-align: left;
      list-style: none;
      background-color: #fff;
      background-clip: padding-box;
      border: 1px solid rgba(0, 0, 0, 0.15);
      border-radius: 0.25rem; }
    span.twitter-typeahead .tt-suggestion {
      display: block;
      width: 100%;
      padding: 3px 20px;
      clear: both;
      font-weight: normal;
      line-height: 1.5;
      color: #373a3c;
      text-align: inherit;
      white-space: nowrap;
      background: none;
      border: 0; }
    span.twitter-typeahead .tt-suggestion:focus,
    .dropdown-item:hover,
    span.twitter-typeahead .tt-suggestion:hover {
        color: #2b2d2f;
        text-decoration: none;
        background-color: #f5f5f5; }
    span.twitter-typeahead .active.tt-suggestion,
    span.twitter-typeahead .tt-suggestion.tt-cursor,
    span.twitter-typeahead .active.tt-suggestion:focus,
    span.twitter-typeahead .tt-suggestion.tt-cursor:focus,
    span.twitter-typeahead .active.tt-suggestion:hover,
    span.twitter-typeahead .tt-suggestion.tt-cursor:hover {
        color: #fff;
        text-decoration: none;
        background-color: #0275d8;
        outline: 0; }
    span.twitter-typeahead .disabled.tt-suggestion,
    span.twitter-typeahead .disabled.tt-suggestion:focus,
    span.twitter-typeahead .disabled.tt-suggestion:hover {
        color: #818a91; }
    span.twitter-typeahead .disabled.tt-suggestion:focus,
    span.twitter-typeahead .disabled.tt-suggestion:hover {
        text-decoration: none;
        cursor: not-allowed;
        background-color: transparent;
        background-image: none;
        filter: "progid:DXImageTransform.Microsoft.gradient(enabled = false)"; }
    span.twitter-typeahead {
      width: 100%; }
      .input-group span.twitter-typeahead {
        display: block !important; }
        .input-group span.twitter-typeahead .tt-menu {
          top: 2.375rem !important; }
  </style>
</head>
<body>
  <div class="row">
    <div class="col-lg" style="margin-left:15px;">
      {{ first }}
    </div>
    {% for t in trees %}
    <div class="col-lg" style="margin-top:50px; margin-left:15px;">
      {{ t }}
    </div>
    {% endfor %}
  </div>
  <div class="row">
    <div class="col-lg" style="margin-top:50px; margin-left:15px;">
      {{ annotations }}
    </div>
  </div>
</body>
<script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/typeahead.js/0.11.1/typeahead.bundle.min.js"></script>
<script type="text/javascript">
  function show_children() {
    hidden = $('#children li:hidden').slice(0, 100);
    if (hidden.length > 1) {
        hidden.show();
        setTimeout(show_children, 100);
    } else {
        console.log("DONE");
    }
    $('#more').hide();
  }
  $('#search-form').submit(function () {
      $(this)
          .find('input[name]')
          .filter(function () {
              return !this.value;
          })
          .prop('name', '');
  });
  function jump(currentPage) {
    newPage = prompt("Jump to page", currentPage);
    if (newPage) {
      href = window.location.href.replace("page="+currentPage, "page="+newPage);
      window.location.href = href
    }
  };
  function getParameterByName(name, url = window.location.href) {
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
  }
  function configure_typeahead(node) {
    if (!node.id || !node.id.endsWith("-typeahead")) {
      return;
    }
    table = node.id.replace("-typeahead", "")
    var bloodhound = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.nonword('display_name'),
      queryTokenizer: Bloodhound.tokenizers.nonword,
      sorter: function(a, b) {
        A = a['display_name'].length;
        B = b['display_name'].length;
        if (A < B) {
           return -1;
        }
        else if (A > B) {
           return 1;
        }
        else return 0;
      },
      remote: {
        url: '?dbs=' + getParameterByName('dbs') + '&text=%QUERY&format=json',
        wildcard: '%QUERY',
        transform : function(response) {
            return bloodhound.sorter(response)
        }
      }
    });
    $(node).typeahead({
      minLength: 0,
      hint: false,
      highlight: true
    }, {
      name: table,
      source: bloodhound,
      display: 'display_name',
      limit: 40
    });
    $(node).bind('click', function(e) {
      $(node).select();
    });
    $(node).bind('typeahead:select', function(ev, suggestion) {
      $(node).prev().val(suggestion['value']);
      go(table, suggestion['value'])
    });
    $(node).bind('keypress',function(e) {
      if(e.which == 13) {
        go(table, $('#' + table + '-hidden').val());
      }
    });
  };
  $('.typeahead').each(function() { configure_typeahead(this); });
  function go(table, value) {
    q = {}
    table = table.replace('_all', '');
    q[table] = value
    window.location = query(q);
  };
  function query(obj) {
    var str = [];
    for (var p in obj)
      if (obj.hasOwnProperty(p)) {
        str.push("?dbs=" + getParameterByName("dbs") + "&id=" + encodeURIComponent(obj[p]) + "");
      }
    return str.join("&");
  }
</script>
</html>
